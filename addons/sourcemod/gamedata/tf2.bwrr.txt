"Games"
{
	/* Team Fortress 2 */
	"tf"
	{
		"Signatures"
		{
			"CTFPlayer::PlaySpecificSequence"	// Called by CTFBotMvMDeployBomb::Update string "primary_deploybomb" is passed as a parameter
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x56\xFF\x75\x08\x8B\xF1\xE8\x2A\x2A\x2A\x2A\x8B\xCE\x83\xF8\xFF"
				"linux"		"@_ZN9CTFPlayer20PlaySpecificSequenceEPKc"
			}
			"CTFPlayer::RemoveObject" //"mvm_mission_update"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x56\x57\x8B\xF9\x8B\xB7\x2A\x2A\x2A\x2A\x83\xEE\x01"
				"linux"		"@_ZN9CTFPlayer12RemoveObjectEP11CBaseObject"
			}
			/**
			 * Find CTFBot::OnEventChangeAttributes by unique string xref "Unable to find item %s to update attribute.\n"
			 * Go to CPointPopulatorInterface::InputChangeBotAttributes via xref
			 * Call for CTFBot::GetEventChangeAttributes should be above it
			 * 
			 * 
			 * iVar4 = FUN_1052ea20(pbVar2); <-- CTFBot::GetEventChangeAttributes
       		 * if (iVar4 != 0) {
             *   FUN_10535530(iVar4); <-- CTFBot::OnEventChangeAttributes
			 * 
			 */
			"CTFBot::GetEventChangeAttributes"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x53\x56\x57\x8B\xF9\x33\xF6\x39\xB7\x30\x29\x00\x00"
				"linux"		"@_ZNK6CTFBot24GetEventChangeAttributesEPKc"
			}
			"DispatchParticleEffect"	//"MODEL '%S' DOESN'T HAVE ATTACHMENT '%S' TO ATTACH PARTICLE SYSTEM '%S' TO.\N"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x56\x8B\x75\x10\x57\x83\xCF\xFF"
				"linux"		"@_Z22DispatchParticleEffectPKc20ParticleAttachment_tP11CBaseEntityS0_b"
			}
			"CBaseTrigger::PointIsWithin"
			{
				"library"	"server"
				"windows"	"\x53\x8B\xDC\x83\xEC\x08\x83\xE4\xF0\x83\xC4\x04\x55\x8B\x6B\x2A\x89\x6C\x24\x2A\x8B\xEC\x81\xEC\xAC\x00\x00\x00"
				"linux"		"@_ZN12CBaseTrigger13PointIsWithinERK6Vector"
			}
			"CMultiplayRules::HaveAllPlayersSpeakConceptIfAllowed" // string --> "MVM.SentryBusterExplode"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\xA1\x2A\x2A\x2A\x2A\x57\xBF\x01\x00\x00\x00\x39\x78\x2A\x7C\x2A\x53\x8B\x5D\x2A\x56\x57\xE8\x2A\x2A\x2A\x2A\x8B\xF0\x83\xC4\x04\x85\xF6\x74\x2A\x8B\x06"
				"linux"		"@_ZN15CMultiplayRules35HaveAllPlayersSpeakConceptIfAllowedEiiPKc"
			}
			"CTFPlayer::CanBeForcedToLaugh" // string --> "#TF_Powerup_Knocked_Out"
			{
				"library"	"server"
				"windows"	"\xA1\x2A\x2A\x2A\x2A\x56\x8B\xF1\x85\xC0\x74\x2A\x80\xB8\x2A\x2A\x2A\x2A\x00\x74\x2A\x8B\x06"
				"linux"		"@_ZN9CTFPlayer18CanBeForcedToLaughEv"
			}
			"CTFGameRules::PushAllPlayersAway" // string --> "Halloween.MerasmusDiscovered" to find CMerasmus::OnRevealed, CTFGameRules::PushAllPlayersAway is called twice by this function. Look at the parameters passed to it.
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x83\xEC\x2C\x56\x6A\x00"
				"linux"		"@_ZN12CTFGameRules18PushAllPlayersAwayERK6VectorffiP10CUtlVectorIP9CTFPlayer10CUtlMemoryIS5_iEE"				
			}
			"CTFPlayer::DropCurrencyPack" // string --> "mvm_sniper_headshot_currency"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x83\xEC\x18\x57\x8B\xF9\x8B\x07"
				"linux"		"@_ZN9CTFPlayer16DropCurrencyPackE17CurrencyRewards_tibP11CBasePlayer"					
			}
			"PointInRespawnRoom"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x53\x33\xDB\x56\x57"
				"linux"		"@_Z18PointInRespawnRoomPK11CBaseEntityRK6Vectorb"
			}
		}
		"Offsets"
		{
			"CBaseEntity::WorldSpaceCenter" // use https://asherkin.github.io/vtable/
			{
				"windows"	"156"
				"linux"		"157"
			}
			"CFilterTFBotHasTag::PassesFilterImpl" //(CBaseEntity *, CBaseEntity *) use asherkin's vtable dumper
			{
				"windows"	"199"
				"linux"		"200"
			}
			"CTFWeaponBase::GetMaxClip1" // int	CTFWeaponBase::GetMaxClip1( void ) const
			{
				"windows"	"325"
				"linux"		"331"
			}
			"CTFWeaponBase::Clip1" // virtual int	Clip1() { return IsEnergyWeapon() ? Energy_GetEnergy() : m_iClip1; }
			{
				"windows"	"345"
				"linux"		"351"
			}
			"CCaptureFlag::PickUp"
			{
				"windows"	"232"
				"linux"		"270"
			}
			"CTFPlayer::ShouldGib"
			{
				"windows"	"297"
				"linux"		"298"
			}
		}
		"Functions"
		{
			"CTFBot::GetEventChangeAttributes"
			{
				"signature" "CTFBot::GetEventChangeAttributes"
				"callconv"	"thiscall"
				"return"	"int"
				"this"		"entity"
				"arguments"
				{
					"eventchangeattribs" // struct CTFBot::EventChangeAttributes_t* pEvent
					{
						"type"	"objectptr"
					}
				}
			}
			"CTFPlayer::CanBeForcedToLaugh"
			{
				"signature" "CTFPlayer::CanBeForcedToLaugh"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"entity"
			}
			"CFilterTFBotHasTag::PassesFilterImpl"
			{
				"offset"	"CFilterTFBotHasTag::PassesFilterImpl"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"entity1"
					{
						"type"	"cbaseentity"
					}
					"entity2"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CTFPlayer::ShouldGib"
			{
				"offset"	"CTFPlayer::ShouldGib"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"CTakeDamageInfo"
					{
						"type"	"objectptr"
						"flags"	"byref"
					}
				}
			}
		}
	}
}